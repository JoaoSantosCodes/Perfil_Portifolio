# Script para atualizar o GitHub automaticamente
Write-Host "üöÄ Iniciando atualiza√ß√£o do GitHub..." -ForegroundColor Green

# Verificar se o git est√° instalado
try {
    $null = git --version
} catch {
    Write-Host "‚ùå Git n√£o est√° instalado ou n√£o est√° no PATH" -ForegroundColor Red
    exit 1
}

# Verificar se est√° em um reposit√≥rio git
try {
    $null = git rev-parse --is-inside-work-tree
} catch {
    Write-Host "‚ùå Diret√≥rio atual n√£o √© um reposit√≥rio Git" -ForegroundColor Red
    exit 1
}

# Verificar se h√° mudan√ßas
$status = git status --porcelain
if ($status) {
    Write-Host "üìù Mudan√ßas detectadas:" -ForegroundColor Yellow
    Write-Host $status

    # Adicionar todas as mudan√ßas
    Write-Host "üì¶ Adicionando mudan√ßas..." -ForegroundColor Yellow
    git add .

    # Criar commit com data e hora
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Write-Host "üíæ Criando commit..." -ForegroundColor Yellow
    git commit -m "feat: atualiza√ß√£o autom√°tica em $timestamp"

    # Fazer push para o GitHub
    Write-Host "‚¨ÜÔ∏è Enviando para o GitHub..." -ForegroundColor Yellow
    git push origin master

    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Atualiza√ß√£o conclu√≠da com sucesso!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Erro ao enviar para o GitHub" -ForegroundColor Red
    }
} else {
    Write-Host "‚ÑπÔ∏è Nenhuma mudan√ßa detectada." -ForegroundColor Blue
}

Write-Host "`nPressione qualquer tecla para sair..."
$Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown") | Out-Null 